version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - red-microservices

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.6.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    restart: on-failure
    networks:
      - red-microservices
      
  profile_db:
    container_name: profile_db
    image: 'mysql:latest'
    ports:
      - "3301:3306"
    environment:
      MYSQL_ROOT_PASSWORD: securepassword123
      MYSQL_PASSWORD: securepassword123
      MYSQL_DATABASE: hotech_backend
    networks:
      - red-microservices

  hotech_profile:
    container_name: profile_container
    image: hotech_profile
    ports:
      - "8001:8001"
    restart: on-failure
    depends_on:
      - profile_db
    networks:
      - red-microservices

  room_db:
    container_name: room_db
    image: 'mysql:latest'
    ports:
      - "3302:3306"
    environment:
      MYSQL_ROOT_PASSWORD: securepassword123
      MYSQL_PASSWORD: securepassword123
      MYSQL_DATABASE: hotech_backend
    networks:
      - red-microservices

  hotech_room:
    container_name: room_container
    image: hotech_room
    ports:
      - "8005:8005"
    restart: on-failure
    depends_on:
      - room_db
    networks:
      - red-microservices

networks:
  red-microservices:
    external: true